version: '3.8'

services:
  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n
    restart: always
    ports:
      - "5678:5678"
    environment:
      # Basic configuration
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_HOST=${SUBDOMAIN}.${DOMAIN_NAME}
      - N8N_PORT=5678
      - N8N_PROTOCOL=${N8N_PROTOCOL:-http}
      - NODE_ENV=production
      - WEBHOOK_URL=${WEBHOOK_URL}
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - TZ=${GENERIC_TIMEZONE}
      
      # Tunnel configuration - Habilita el túnel para desarrollo y testing
      - N8N_TUNNEL=true
      - N8N_TUNNEL_SUBDOMAIN=${N8N_TUNNEL_SUBDOMAIN}
      - N8N_TUNNEL_TIMEOUT=60000
      - N8N_TUNNEL_RETRY_COUNT=5
      - N8N_TUNNEL_RETRY_DELAY=5000
      - WEBHOOK_TUNNEL_URL=https://${N8N_TUNNEL_SUBDOMAIN}.loca.lt
      # Database configuration (descomenta si usas PostgreSQL)
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_POSTGRESDB_SCHEMA=${POSTGRES_SCHEMA}
      
      # Optional: Basic Auth (para mayor seguridad)
      # - N8N_BASIC_AUTH_ACTIVE=true
      # - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      # - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      
      # Optional: Encryption key (importante para producción)
      # - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      
    volumes:
      - n8n_data:/home/node/.n8n
      # Optional: Mount local files directory
      # - ./local-files:/files
    command: start --tunnel
    depends_on:
      - postgres
    networks:
      - n8n_network

  # PostgreSQL Database (opcional - descomenta si necesitas base de datos externa)
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - n8n_network
    expose:
      - "5432"
  redis:
    image: redis:latest
    container_name: n8n-redis
    restart: always
    command: >
      redis-server --port 6379 --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - n8n_network
  evolution-api:
    container_name: evolution_api
    image: atendai/evolution-api:v2.2.3
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - evolution_instances:/evolution/instances
    depends_on:
      - postgres
      - redis
    networks:
      - n8n_network
volumes:
  n8n_data:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local
  evolution_instances:
networks:
  n8n_network:
    driver: bridge
